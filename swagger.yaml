openapi: 3.0.0
info:
  title: Jobs API
  contact: { }
  version: '1.0'
servers:
  - url: https://j7amo-jobs-api.onrender.com/api/v1
    variables: { }
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register user
      operationId: Registeruser
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RegisteruserRequest'
                - example:
                    name: Roman
                    email: awdwefre@sdlvkfr.com
                    password: '123456'
            example:
              name: Roman
              email: awdwefre@sdlvkfr.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security: [ ]
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      operationId: Loginuser
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/LoginuserRequest'
                - example:
                    email: awdwefre@sdlvkfr.com
                    password: '123456'
            example:
              email: awdwefre@sdlvkfr.com
              password: '123456'
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security: [ ]
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create a job
      operationId: Createajob
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/CreateajobRequest'
                - example:
                    company: Neflix
                    position: Producer
            example:
              company: Neflix
              position: Producer
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    get:
      tags:
        - Jobs
      summary: Get all jobs
      operationId: Getalljobs
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get a single job
      operationId: Getasinglejob
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    patch:
      tags:
        - Jobs
      summary: Update job
      operationId: Updatejob
      parameters: [ ]
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/UpdatejobRequest'
                - example:
                    company: Gaga
                    position: booboo
            example:
              company: Gaga
              position: booboo
        required: true
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
    delete:
      tags:
        - Jobs
      summary: Delete job
      operationId: Deletejob
      parameters: [ ]
      responses:
        '200':
          description: ''
          headers: { }
      deprecated: false
      security:
        - bearer: [ ]
components:
  schemas:
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Roman
        email: awdwefre@sdlvkfr.com
        password: '123456'
    LoginuserRequest:
      title: LoginuserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: awdwefre@sdlvkfr.com
        password: '123456'
    CreateajobRequest:
      title: CreateajobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Neflix
        position: Producer
    UpdatejobRequest:
      title: UpdatejobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Gaga
        position: booboo
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: [ ]
tags:
  - name: Auth
    description: ''
  - name: Jobs
    description: ''
